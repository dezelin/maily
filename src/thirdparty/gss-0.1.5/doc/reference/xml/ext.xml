<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="gss-ext">
<refmeta>
<refentrytitle role="top_of_page" id="gss-ext.top_of_page">ext</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  GSS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>ext</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="gss-ext.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gss-check-version">gss_check_version</link>                   (<parameter>const <link linkend="char"><type>char</type></link> *req_version</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gss-oid-equal">gss_oid_equal</link>                       (<parameter><link linkend="gss-OID"><type>gss_OID</type></link> first_oid</parameter>,
                                                         <parameter><link linkend="gss-OID"><type>gss_OID</type></link> second_oid</parameter>);
<link linkend="OM-uint32"><returnvalue>OM_uint32</returnvalue></link>           <link linkend="gss-copy-oid">gss_copy_oid</link>                        (<parameter><link linkend="OM-uint32"><type>OM_uint32</type></link> *minor_status</parameter>,
                                                         <parameter>const <link linkend="gss-OID"><type>gss_OID</type></link> src_oid</parameter>,
                                                         <parameter><link linkend="gss-OID"><type>gss_OID</type></link> dest_oid</parameter>);
<link linkend="OM-uint32"><returnvalue>OM_uint32</returnvalue></link>           <link linkend="gss-duplicate-oid">gss_duplicate_oid</link>                   (<parameter><link linkend="OM-uint32"><type>OM_uint32</type></link> *minor_status</parameter>,
                                                         <parameter>const <link linkend="gss-OID"><type>gss_OID</type></link> src_oid</parameter>,
                                                         <parameter><link linkend="gss-OID"><type>gss_OID</type></link> *dest_oid</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gss-userok">gss_userok</link>                          (<parameter>const <link linkend="gss-name-t"><type>gss_name_t</type></link> name</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *username</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gss-encapsulate-token">gss_encapsulate_token</link>               (<parameter>const <link linkend="gss-buffer-t"><type>gss_buffer_t</type></link> input_message</parameter>,
                                                         <parameter><link linkend="gss-OID"><type>gss_OID</type></link> token_oid</parameter>,
                                                         <parameter><link linkend="gss-buffer-t"><type>gss_buffer_t</type></link> output_message</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gss-encapsulate-token-prefix">gss_encapsulate_token_prefix</link>        (<parameter>const <link linkend="gss-buffer-t"><type>gss_buffer_t</type></link> input_message</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *prefix</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> prefixlen</parameter>,
                                                         <parameter><link linkend="gss-OID"><type>gss_OID</type></link> token_oid</parameter>,
                                                         <parameter><link linkend="gss-buffer-t"><type>gss_buffer_t</type></link> output_message</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gss-decapsulate-token">gss_decapsulate_token</link>               (<parameter>const <link linkend="gss-buffer-t"><type>gss_buffer_t</type></link> input_message</parameter>,
                                                         <parameter>const <link linkend="gss-OID"><type>gss_OID</type></link> token_oid</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> **dataptr</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *datalen</parameter>);
extern              gss_OID_desc <link linkend="GSS-C-NT-USER-NAME-static">GSS_C_NT_USER_NAME_static</link>;
extern              gss_OID_desc <link linkend="GSS-C-NT-MACHINE-UID-NAME-static">GSS_C_NT_MACHINE_UID_NAME_static</link>;
extern              gss_OID_desc <link linkend="GSS-C-NT-STRING-UID-NAME-static">GSS_C_NT_STRING_UID_NAME_static</link>;
extern              gss_OID_desc <link linkend="GSS-C-NT-HOSTBASED-SERVICE-X-static">GSS_C_NT_HOSTBASED_SERVICE_X_static</link>;
extern              gss_OID_desc <link linkend="GSS-C-NT-HOSTBASED-SERVICE-static">GSS_C_NT_HOSTBASED_SERVICE_static</link>;
extern              gss_OID_desc <link linkend="GSS-C-NT-ANONYMOUS-static">GSS_C_NT_ANONYMOUS_static</link>;
extern              gss_OID_desc <link linkend="GSS-C-NT-EXPORT-NAME-static">GSS_C_NT_EXPORT_NAME_static</link>;
</synopsis>
</refsynopsisdiv>

<refsect1 id="gss-ext.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="gss-ext.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="gss-check-version" role="function">
<title>gss_check_version ()</title>
<indexterm zone="gss-check-version"><primary>gss_check_version</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gss_check_version                   (<parameter>const <link linkend="char"><type>char</type></link> *req_version</parameter>);</programlisting>
<para>
Check that the version of the library is at minimum the one
given as a string in <parameter>req_version</parameter>.
</para>
<para>
WARNING: This function is a GNU GSS specific extension, and is not
part of the official GSS API.</para>
<variablelist role="params">
<varlistentry><term><parameter>req_version</parameter>&#160;:</term>
<listitem><simpara>version string to compare with, or NULL
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The actual version string of the library; NULL if the
  condition is not met.  If <link linkend="NULL:CAPS"><literal>NULL</literal></link> is passed to this function no
  check is done and only the version string is returned.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gss-oid-equal" role="function">
<title>gss_oid_equal ()</title>
<indexterm zone="gss-oid-equal"><primary>gss_oid_equal</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gss_oid_equal                       (<parameter><link linkend="gss-OID"><type>gss_OID</type></link> first_oid</parameter>,
                                                         <parameter><link linkend="gss-OID"><type>gss_OID</type></link> second_oid</parameter>);</programlisting>
<para>
Compare two OIDs for equality.  The comparison is "deep", i.e., the
actual byte sequences of the OIDs are compared instead of just the
pointer equality.
</para>
<para>
WARNING: This function is a GNU GSS specific extension, and is not
part of the official GSS API.</para>
<variablelist role="params">
<varlistentry><term><parameter>first_oid</parameter>&#160;:</term>
<listitem><simpara>(Object ID, read) First Object identifier.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>second_oid</parameter>&#160;:</term>
<listitem><simpara>(Object ID, read) First Object identifier.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Returns boolean value true when the two OIDs are
  equal, otherwise false.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gss-copy-oid" role="function">
<title>gss_copy_oid ()</title>
<indexterm zone="gss-copy-oid"><primary>gss_copy_oid</primary></indexterm>
<programlisting><link linkend="OM-uint32"><returnvalue>OM_uint32</returnvalue></link>           gss_copy_oid                        (<parameter><link linkend="OM-uint32"><type>OM_uint32</type></link> *minor_status</parameter>,
                                                         <parameter>const <link linkend="gss-OID"><type>gss_OID</type></link> src_oid</parameter>,
                                                         <parameter><link linkend="gss-OID"><type>gss_OID</type></link> dest_oid</parameter>);</programlisting>
<para>
Make an exact copy of the given OID, that shares no memory areas
with the original.
</para>
<para>
WARNING: This function is a GNU GSS specific extension, and is not
part of the official GSS API.</para>
<variablelist role="params">
<varlistentry><term><parameter>minor_status</parameter>&#160;:</term>
<listitem><simpara>(integer, modify) Mechanism specific status code.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src_oid</parameter>&#160;:</term>
<listitem><simpara>(Object ID, read) The object identifier to copy.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dest_oid</parameter>&#160;:</term>
<listitem><simpara>(Object ID, modify) The resultant copy of <parameter>src_oid</parameter>.
  Storage associated with this name must be freed by the
  application, but <link linkend="gss-release-oid"><function>gss_release_oid()</function></link> cannot be used generally as it
  deallocate the oid structure itself too (use
  <link linkend="gss-duplicate-oid"><function>gss_duplicate_oid()</function></link> if you don't want this problem.)
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>

`GSS_S_COMPLETE`: Successful completion.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gss-duplicate-oid" role="function">
<title>gss_duplicate_oid ()</title>
<indexterm zone="gss-duplicate-oid"><primary>gss_duplicate_oid</primary></indexterm>
<programlisting><link linkend="OM-uint32"><returnvalue>OM_uint32</returnvalue></link>           gss_duplicate_oid                   (<parameter><link linkend="OM-uint32"><type>OM_uint32</type></link> *minor_status</parameter>,
                                                         <parameter>const <link linkend="gss-OID"><type>gss_OID</type></link> src_oid</parameter>,
                                                         <parameter><link linkend="gss-OID"><type>gss_OID</type></link> *dest_oid</parameter>);</programlisting>
<para>
Allocate a new OID and make it an exact copy of the given OID, that
shares no memory areas with the original.
</para>
<para>
WARNING: This function is a GNU GSS specific extension, and is not
part of the official GSS API.</para>
<variablelist role="params">
<varlistentry><term><parameter>minor_status</parameter>&#160;:</term>
<listitem><simpara>(integer, modify) Mechanism specific status code.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src_oid</parameter>&#160;:</term>
<listitem><simpara>(Object ID, read) The object identifier to duplicate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dest_oid</parameter>&#160;:</term>
<listitem><simpara>(Object ID, modify) The resultant copy of <parameter>src_oid</parameter>.
  Storage associated with this name must be freed by the
  application, by calling <link linkend="gss-release-oid"><function>gss_release_oid()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>

`GSS_S_COMPLETE`: Successful completion.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gss-userok" role="function">
<title>gss_userok ()</title>
<indexterm zone="gss-userok"><primary>gss_userok</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gss_userok                          (<parameter>const <link linkend="gss-name-t"><type>gss_name_t</type></link> name</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *username</parameter>);</programlisting>
<para>
Compare the username against the output from <link linkend="gss-export-name"><function>gss_export_name()</function></link>
invoked on <parameter>name</parameter>, after removing the leading OID.  This answers the
question whether the particular mechanism would authenticate them
as the same principal
</para>
<para>
WARNING: This function is a GNU GSS specific extension, and is not
part of the official GSS API.</para>
<variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>(gss_name_t, read) Name to be compared.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>username</parameter>&#160;:</term>
<listitem><simpara>Zero terminated string with username.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Returns 0 if the names match, non-0 otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gss-encapsulate-token" role="function">
<title>gss_encapsulate_token ()</title>
<indexterm zone="gss-encapsulate-token"><primary>gss_encapsulate_token</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gss_encapsulate_token               (<parameter>const <link linkend="gss-buffer-t"><type>gss_buffer_t</type></link> input_message</parameter>,
                                                         <parameter><link linkend="gss-OID"><type>gss_OID</type></link> token_oid</parameter>,
                                                         <parameter><link linkend="gss-buffer-t"><type>gss_buffer_t</type></link> output_message</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>input_message</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>token_oid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>output_message</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gss-encapsulate-token-prefix" role="function">
<title>gss_encapsulate_token_prefix ()</title>
<indexterm zone="gss-encapsulate-token-prefix"><primary>gss_encapsulate_token_prefix</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gss_encapsulate_token_prefix        (<parameter>const <link linkend="gss-buffer-t"><type>gss_buffer_t</type></link> input_message</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *prefix</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> prefixlen</parameter>,
                                                         <parameter><link linkend="gss-OID"><type>gss_OID</type></link> token_oid</parameter>,
                                                         <parameter><link linkend="gss-buffer-t"><type>gss_buffer_t</type></link> output_message</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>input_message</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prefix</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prefixlen</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>token_oid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>output_message</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gss-decapsulate-token" role="function">
<title>gss_decapsulate_token ()</title>
<indexterm zone="gss-decapsulate-token"><primary>gss_decapsulate_token</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gss_decapsulate_token               (<parameter>const <link linkend="gss-buffer-t"><type>gss_buffer_t</type></link> input_message</parameter>,
                                                         <parameter>const <link linkend="gss-OID"><type>gss_OID</type></link> token_oid</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> **dataptr</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *datalen</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>input_message</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>token_oid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dataptr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>datalen</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GSS-C-NT-USER-NAME-static" role="variable">
<title>GSS_C_NT_USER_NAME_static</title>
<indexterm zone="GSS-C-NT-USER-NAME-static"><primary>GSS_C_NT_USER_NAME_static</primary></indexterm>
<programlisting>extern gss_OID_desc GSS_C_NT_USER_NAME_static;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GSS-C-NT-MACHINE-UID-NAME-static" role="variable">
<title>GSS_C_NT_MACHINE_UID_NAME_static</title>
<indexterm zone="GSS-C-NT-MACHINE-UID-NAME-static"><primary>GSS_C_NT_MACHINE_UID_NAME_static</primary></indexterm>
<programlisting>extern gss_OID_desc GSS_C_NT_MACHINE_UID_NAME_static;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GSS-C-NT-STRING-UID-NAME-static" role="variable">
<title>GSS_C_NT_STRING_UID_NAME_static</title>
<indexterm zone="GSS-C-NT-STRING-UID-NAME-static"><primary>GSS_C_NT_STRING_UID_NAME_static</primary></indexterm>
<programlisting>extern gss_OID_desc GSS_C_NT_STRING_UID_NAME_static;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GSS-C-NT-HOSTBASED-SERVICE-X-static" role="variable">
<title>GSS_C_NT_HOSTBASED_SERVICE_X_static</title>
<indexterm zone="GSS-C-NT-HOSTBASED-SERVICE-X-static"><primary>GSS_C_NT_HOSTBASED_SERVICE_X_static</primary></indexterm>
<programlisting>extern gss_OID_desc GSS_C_NT_HOSTBASED_SERVICE_X_static;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GSS-C-NT-HOSTBASED-SERVICE-static" role="variable">
<title>GSS_C_NT_HOSTBASED_SERVICE_static</title>
<indexterm zone="GSS-C-NT-HOSTBASED-SERVICE-static"><primary>GSS_C_NT_HOSTBASED_SERVICE_static</primary></indexterm>
<programlisting>extern gss_OID_desc GSS_C_NT_HOSTBASED_SERVICE_static;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GSS-C-NT-ANONYMOUS-static" role="variable">
<title>GSS_C_NT_ANONYMOUS_static</title>
<indexterm zone="GSS-C-NT-ANONYMOUS-static"><primary>GSS_C_NT_ANONYMOUS_static</primary></indexterm>
<programlisting>extern gss_OID_desc GSS_C_NT_ANONYMOUS_static;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GSS-C-NT-EXPORT-NAME-static" role="variable">
<title>GSS_C_NT_EXPORT_NAME_static</title>
<indexterm zone="GSS-C-NT-EXPORT-NAME-static"><primary>GSS_C_NT_EXPORT_NAME_static</primary></indexterm>
<programlisting>extern gss_OID_desc GSS_C_NT_EXPORT_NAME_static;
</programlisting>
<para>
</para></refsect2>

</refsect1>

</refentry>
