.\" DO NOT MODIFY THIS FILE!  It was generated by gdoc.
.TH "gss_wrap_size_limit" 3 "0.1.5" "gss" "gss"
.SH NAME
gss_wrap_size_limit \- API function
.SH SYNOPSIS
.B #include <gss.h>
.sp
.BI "OM_uint32 gss_wrap_size_limit(OM_uint32 * " minor_status ", const gss_ctx_id_t " context_handle ", int " conf_req_flag ", gss_qop_t " qop_req ", OM_uint32 " req_output_size ", OM_uint32 * " max_input_size ");"
.SH ARGUMENTS
.IP "OM_uint32 * minor_status" 12
(Integer, modify) Mechanism specific status code.
.IP "const gss_ctx_id_t context_handle" 12
(gss_ctx_id_t, read) A handle that refers to the
  security over which the messages will be sent.
.IP "int conf_req_flag" 12
(Boolean, read) Indicates whether gss_wrap will be
  asked to apply confidentiality protection in addition to
  integrity protection.  See the routine description for gss_wrap
  for more details.
.IP "gss_qop_t qop_req" 12
(gss_qop_t, read) Indicates the level of protection that
  gss_wrap will be asked to provide.  See the routine description
  for gss_wrap for more details.
.IP "OM_uint32 req_output_size" 12
(Integer, read) The desired maximum size for
  tokens emitted by gss_wrap.
.IP "OM_uint32 * max_input_size" 12
(Integer, modify) The maximum input message size
  that may be presented to gss_wrap in order to guarantee that the
  emitted token shall be no larger than req_output_size bytes.
.SH "DESCRIPTION"
Allows an application to determine the maximum message size that,
if presented to gss_wrap with the same conf_req_flag and qop_req
parameters, will result in an output token containing no more than
req_output_size bytes.

This call is intended for use by applications that communicate over
protocols that impose a maximum message size.  It enables the
application to fragment messages prior to applying protection.

GSS\-API implementations are recommended but not required to detect
invalid QOP values when \fBgss_wrap_size_limit()\fP is called. This
routine guarantees only a maximum message size, not the
availability of specific QOP values for message protection.

Successful completion of this call does not guarantee that gss_wrap
will be able to protect a message of length max_input_size bytes,
since this ability may depend on the availability of system
resources at the time that gss_wrap is called.  However, if the
implementation itself imposes an upper limit on the length of
messages that may be processed by gss_wrap, the implementation
should not return a value via max_input_bytes that is greater than
this length.
.SH "RETURN VALUE"

`GSS_S_COMPLETE`: Successful completion.

`GSS_S_NO_CONTEXT`: The referenced context could not be accessed.

`GSS_S_CONTEXT_EXPIRED`: The context has expired.

`GSS_S_BAD_QOP`: The specified QOP is not supported by the
mechanism.
.SH "REPORTING BUGS"
Report bugs to <bug-gss@gnu.org>.
GNU Generic Security Service home page: http://www.gnu.org/software/gss/
General help using GNU software: http://www.gnu.org/gethelp/
.SH COPYRIGHT
Copyright \(co 2003-2010 Simon Josefsson.
.br
Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
.SH "SEE ALSO"
The full documentation for
.B gss
is maintained as a Texinfo manual.  If the
.B info
and
.B gss
programs are properly installed at your site, the command
.IP
.B info gss
.PP
should give you access to the complete manual.
